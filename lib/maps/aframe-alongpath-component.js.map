{"version":3,"sources":["aframe-alongpath-component.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","modules","__webpack_require__","moduleId","installedModules","id","loaded","m","c","p","AFRAME","registerComponent","schema","curve","default","triggers","triggerRadius","type","dur","delay","loop","rotate","constraint","x","y","z","resetonplay","init","update","oldData","this","document","querySelector","data","querySelectorAll","initialPosition","el","object3D","position","console","warn","reset","interval","removeState","activeTrigger","tick","time","timeDelta","components","is","setAttribute","points","addState","emit","getPoint","axis","THREE","Vector3","up","tangent","getTangentAt","normalize","crossVectors","radians","Math","acos","dot","quaternion","setFromAxisAngle","updateActiveTrigger","error","play","remove","copy","distanceTo"],"mappings":"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","file":"../aframe-alongpath-component.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n/******/(function (modules) {\n\t// webpackBootstrap\n\t/******/ // The module cache\n\t/******/var installedModules = {};\n\n\t/******/ // The require function\n\t/******/function __webpack_require__(moduleId) {\n\n\t\t/******/ // Check if module is in cache\n\t\t/******/if (installedModules[moduleId])\n\t\t\t/******/return installedModules[moduleId].exports;\n\n\t\t/******/ // Create a new module (and put it into the cache)\n\t\t/******/var module = installedModules[moduleId] = {\n\t\t\t/******/exports: {},\n\t\t\t/******/id: moduleId,\n\t\t\t/******/loaded: false\n\t\t\t/******/ };\n\n\t\t/******/ // Execute the module function\n\t\t/******/modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t\t/******/ // Flag the module as loaded\n\t\t/******/module.loaded = true;\n\n\t\t/******/ // Return the exports of the module\n\t\t/******/return module.exports;\n\t\t/******/\n\t}\n\n\t/******/ // expose the modules object (__webpack_modules__)\n\t/******/__webpack_require__.m = modules;\n\n\t/******/ // expose the module cache\n\t/******/__webpack_require__.c = installedModules;\n\n\t/******/ // __webpack_public_path__\n\t/******/__webpack_require__.p = \"\";\n\n\t/******/ // Load entry module and return exports\n\t/******/return __webpack_require__(0);\n\t/******/\n})(\n/************************************************************************/\n/******/[\n/* 0 */\n/***/function (module, exports) {\n\n\tif (typeof AFRAME === 'undefined') {\n\t\tthrow new Error('Component attempted to register before AFRAME was available.');\n\t}\n\n\t/**\n  * Alongpath component for A-Frame.\n  * Move Entities along a predefined Curve\n  */\n\tAFRAME.registerComponent('alongpath', {\n\n\t\t//dependencies: ['curve'],\n\n\t\tschema: {\n\t\t\tcurve: { default: '' },\n\t\t\ttriggers: { default: 'a-curve-point' },\n\t\t\ttriggerRadius: { type: 'number', default: 0.01 },\n\t\t\tdur: { default: 1000 },\n\t\t\tdelay: { default: 0 },\n\t\t\tloop: { default: false },\n\t\t\trotate: { default: false },\n\t\t\tconstraint: { type: 'vec3', default: { x: 0, y: 0, z: 1 } },\n\t\t\tresetonplay: { default: true }\n\t\t},\n\n\t\tinit: function init() {\n\n\t\t\t// We have to fetch curve and triggers manually because of an A-FRAME ISSUE\n\t\t\t// with Property-Type \"Selector\" / \"SelectorAll\": https://github.com/aframevr/aframe/issues/2517\n\n\t\t},\n\n\t\tupdate: function update(oldData) {\n\n\t\t\tthis.curve = document.querySelector(this.data.curve);\n\t\t\tthis.triggers = this.curve.querySelectorAll(this.data.triggers);\n\n\t\t\tif (!this.curve) {\n\t\t\t\tconsole.warn(\"Curve not found. Can't follow anything...\");\n\t\t\t} else {\n\t\t\t\tthis.initialPosition = this.el.object3D.position;\n\t\t\t}\n\n\t\t\tthis.reset();\n\t\t},\n\n\t\treset: function reset() {\n\t\t\t// Reset to initial state\n\t\t\tthis.interval = 0;\n\n\t\t\tthis.el.removeState(\"endofpath\");\n\t\t\tthis.el.removeState(\"moveonpath\");\n\n\t\t\tif (this.activeTrigger) {\n\t\t\t\tthis.activeTrigger.removeState(\"alongpath-active-trigger\");\n\t\t\t\tthis.activeTrigger = null;\n\t\t\t}\n\t\t},\n\n\t\ttick: function tick(time, timeDelta) {\n\t\t\tvar curve = this.curve.components['curve'] ? this.curve.components['curve'].curve : null;\n\n\t\t\tif (curve) {\n\t\t\t\t// Only update position if we didn't reach\n\t\t\t\t// the end of the path\n\t\t\t\tif (!this.el.is(\"endofpath\")) {\n\t\t\t\t\tthis.interval = this.interval + timeDelta;\n\n\t\t\t\t\tvar i = 0;\n\n\t\t\t\t\tif (this.interval - this.data.delay >= this.data.dur) {\n\t\t\t\t\t\t// Time is up, we should be at the end of the path\n\t\t\t\t\t\ti = 1;\n\t\t\t\t\t} else if (this.interval - this.data.delay < 0) {\n\t\t\t\t\t\t// We are still waiting for the delay-time to finish\n\t\t\t\t\t\t// so keep entity at the beginning of the path\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Update path position based on timing\n\t\t\t\t\t\ti = (this.interval - this.data.delay) / this.data.dur;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.data.loop === false && i >= 1) {\n\t\t\t\t\t\t// Set the end-position\n\t\t\t\t\t\tthis.el.setAttribute('position', curve.points[curve.points.length - 1]);\n\n\t\t\t\t\t\t// We have reached the end of the path and are not going\n\t\t\t\t\t\t// to loop back to the beginning therefore set final state\n\t\t\t\t\t\tthis.el.removeState(\"moveonpath\");\n\t\t\t\t\t\tthis.el.addState(\"endofpath\");\n\t\t\t\t\t\tthis.el.emit(\"movingended\");\n\t\t\t\t\t} else if (this.data.loop === true && i >= 1) {\n\t\t\t\t\t\t// We have reached the end of the path\n\t\t\t\t\t\t// but we are looping through the curve,\n\t\t\t\t\t\t// so restart here.\n\t\t\t\t\t\tthis.el.emit(\"movingended\");\n\t\t\t\t\t\tthis.interval = this.data.delay;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We are starting to move or somewhere in the middle of the pathâ€¦\n\t\t\t\t\t\tif (!this.el.is(\"moveonpath\")) {\n\t\t\t\t\t\t\tthis.el.addState(\"moveonpath\");\n\t\t\t\t\t\t\tthis.el.emit(\"movingstarted\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// â€¦updating position\n\t\t\t\t\t\tvar p = curve.getPoint(i);\n\t\t\t\t\t\tthis.el.setAttribute('position', p);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Update Rotation of Entity\n\t\t\t\t\t// Based on http://jsfiddle.net/qGPTT/133/\n\t\t\t\t\tif (this.data.rotate === true) {\n\t\t\t\t\t\tvar axis = new THREE.Vector3();\n\t\t\t\t\t\t// forward vector, allows customization of which x,y,z component is up during the path movement\n\t\t\t\t\t\tvar up = new THREE.Vector3(this.data.constraint.x, this.data.constraint.y, this.data.constraint.z);\n\t\t\t\t\t\t//var up = new THREE.Vector3(0, 0, 1); // previous code\n\t\t\t\t\t\tvar tangent = curve.getTangentAt(i).normalize();\n\n\t\t\t\t\t\taxis.crossVectors(up, tangent).normalize();\n\n\t\t\t\t\t\tvar radians = Math.acos(up.dot(tangent));\n\n\t\t\t\t\t\tthis.el.object3D.quaternion.setFromAxisAngle(axis, radians);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check for Active-Triggers\n\t\t\t\t\tif (this.triggers && this.triggers.length > 0) {\n\t\t\t\t\t\tthis.updateActiveTrigger();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.error(\"The entity associated with the curve property has no curve component.\");\n\t\t\t}\n\t\t},\n\n\t\tplay: function play() {\n\t\t\tif (this.data.resetonplay) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t},\n\n\t\tremove: function remove() {\n\t\t\tthis.el.object3D.position.copy(this.initialPosition);\n\t\t},\n\n\t\tupdateActiveTrigger: function updateActiveTrigger() {\n\t\t\tfor (var i = 0; i < this.triggers.length; i++) {\n\t\t\t\tif (this.triggers[i].object3D) {\n\t\t\t\t\tif (this.triggers[i].object3D.position.distanceTo(this.el.object3D.position) <= this.data.triggerRadius) {\n\t\t\t\t\t\t// If this element is not the active trigger, activate it - and if necessary deactivate other triggers.\n\t\t\t\t\t\tif (this.activeTrigger && this.activeTrigger != this.triggers[i]) {\n\t\t\t\t\t\t\tthis.activeTrigger.removeState(\"alongpath-active-trigger\");\n\t\t\t\t\t\t\tthis.activeTrigger.emit(\"alongpath-trigger-deactivated\");\n\n\t\t\t\t\t\t\tthis.activeTrigger = this.triggers[i];\n\t\t\t\t\t\t\tthis.activeTrigger.addState(\"alongpath-active-trigger\");\n\t\t\t\t\t\t\tthis.activeTrigger.emit(\"alongpath-trigger-activated\");\n\t\t\t\t\t\t} else if (!this.activeTrigger) {\n\t\t\t\t\t\t\tthis.activeTrigger = this.triggers[i];\n\t\t\t\t\t\t\tthis.activeTrigger.addState(\"alongpath-active-trigger\");\n\t\t\t\t\t\t\tthis.activeTrigger.emit(\"alongpath-trigger-activated\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// If this Element was the active trigger, deactivate it\n\t\t\t\t\t\tif (this.activeTrigger && this.activeTrigger == this.triggers[i]) {\n\t\t\t\t\t\t\tthis.activeTrigger.removeState(\"alongpath-active-trigger\");\n\t\t\t\t\t\t\tthis.activeTrigger.emit(\"alongpath-trigger-deactivated\");\n\t\t\t\t\t\t\tthis.activeTrigger = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\t/***/\n}]\n/******/);\n\n},{}]},{},[1])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"]}